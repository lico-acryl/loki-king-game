{"version":3,"sources":["components/Loki/loki.png","components/Lico/lico.png","components/Trevor/trevor.png","mob/MobSpawnManager.js","components/Loki/index.js","components/Player/index.js","components/Lico/index.js","components/Trevor/index.js","components/PlayerUI/index.js","components/Game/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","MobSpawnManager","mapWidth","mapHeight","mobSize","this","mobs","newMob","Math","floor","random","x","y","size","type","push","targetPos","map","mob","Loki","position","lokiStyle","left","top","className","style","alt","src","LokiImg","Player","Lico","licoStyle","LicoImg","Trevor","trevorStyle","TrevorImg","PlayerUI","hp","width","backgroundColor","PLAYER_INIT_KEY_STATUS","keyUp","keyDown","keyLeft","keyRight","PLAYER_INIT_POSITION","movePlayerReducer","state","action","Game","useState","keyStatus","setKeyStatus","useReducer","playerPos","movePlayer","setMobs","document","documentElement","clientWidth","clientHeight","mobSpawnManager","useEffect","keyDownController","e","keyCode","keyUpController","tmMoveController","setInterval","addEventListener","removeEventListener","clearInterval","mobSpawnController","func","spawnMob","moveMobs","getMobs","setTimeout","idx","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5dfda340.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loki.86f10598.png\";","module.exports = __webpack_public_path__ + \"static/media/lico.57f27815.png\";","module.exports = __webpack_public_path__ + \"static/media/trevor.543f17ba.png\";","// It doesn't use mobSize yet.\r\nclass MobSpawnManager {\r\n    constructor(mapWidth, mapHeight, mobSize) {\r\n        this.mobs = [];\r\n        this.mapWidth = mapWidth;\r\n        this.mapHeight = mapHeight;\r\n        this.mobSize = mobSize;\r\n    }\r\n\r\n    getMobs() {\r\n        return this.mobs;\r\n    }\r\n\r\n    spawnMob() {\r\n        const spawnCases = Math.floor(Math.random() * 4);\r\n\r\n        let newMob = {};\r\n        switch (spawnCases) {\r\n            case 0:\r\n                newMob = {\r\n                    x: Math.floor(\r\n                        Math.random() * (this.mapWidth - this.mobSize)\r\n                    ),\r\n                    y: 0,\r\n                };\r\n                break;\r\n            case 1:\r\n                newMob = {\r\n                    x: Math.floor(\r\n                        Math.random() * (this.mapWidth - this.mobSize)\r\n                    ),\r\n                    y: this.mapHeight - this.mobSize,\r\n                };\r\n                break;\r\n            case 2:\r\n                newMob = {\r\n                    x: 0,\r\n                    y: Math.floor(\r\n                        Math.random() * (this.mapHeight - this.mobSize)\r\n                    ),\r\n                };\r\n                break;\r\n            case 3:\r\n                newMob = {\r\n                    x: this.mapWidth - this.mobSize,\r\n                    y: Math.floor(\r\n                        Math.random() * (this.mapHeight - this.mobSize)\r\n                    ),\r\n                };\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        newMob.size = this.mobSize;\r\n        newMob.type = Math.floor(Math.random() * 2);\r\n\r\n        this.mobs.push(newMob);\r\n    }\r\n\r\n    moveMobs(targetPos) {\r\n        this.mobs = this.mobs.map((mob) => {\r\n            if (mob.x < targetPos.x) {\r\n                mob.x += 5;\r\n            } else {\r\n                mob.x -= 5;\r\n            }\r\n\r\n            if (mob.y < targetPos.y) {\r\n                mob.y += 5;\r\n            } else {\r\n                mob.y -= 5;\r\n            }\r\n\r\n            return { ...mob };\r\n        });\r\n    }\r\n}\r\n\r\nexport default MobSpawnManager;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport LokiImg from \"./loki.png\";\r\n\r\nconst Loki = ({ position }) => {\r\n    const lokiStyle = {\r\n        left: position.x,\r\n        top: position.y,\r\n    };\r\n\r\n    return (\r\n        <div className=\"loki\" style={lokiStyle}>\r\n            <img alt=\"loki\" src={LokiImg} />\r\n        </div>\r\n    );\r\n};\r\n\r\nLoki.propTypes = {\r\n    position: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Loki;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loki from \"../Loki\";\r\n\r\nconst Player = ({ position }) => {\r\n    return <Loki position={position} />;\r\n};\r\n\r\nPlayer.propTypes = {\r\n    position: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport LicoImg from \"./lico.png\";\r\n\r\nconst Lico = ({ position }) => {\r\n    const licoStyle = {\r\n        left: position.x,\r\n        top: position.y,\r\n    };\r\n\r\n    return (\r\n        <div className=\"lico\" style={licoStyle}>\r\n            <img alt=\"lico\" src={LicoImg} />\r\n        </div>\r\n    );\r\n};\r\n\r\nLico.propTypes = {\r\n    position: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Lico;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport TrevorImg from \"./trevor.png\";\r\n\r\nconst Trevor = ({ position }) => {\r\n    const trevorStyle = {\r\n        left: position.x,\r\n        top: position.y,\r\n    };\r\n\r\n    return (\r\n        <div className=\"trevor\" style={trevorStyle}>\r\n            <img alt=\"trevor\" src={TrevorImg} />\r\n        </div>\r\n    );\r\n};\r\n\r\nTrevor.propTypes = {\r\n    position: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Trevor;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PlayerUI = ({ hp }) => {\r\n    return (\r\n        <div className=\"player-ui\">\r\n            <div\r\n                className=\"hp\"\r\n                style={{ width: `${hp}px`, backgroundColor: \"#ff7675\" }}\r\n            >\r\n                HP\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPlayerUI.propTypes = {\r\n    hp: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default PlayerUI;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport \"./styles.css\";\r\nimport MobSpawnManager from \"../../mob/MobSpawnManager\";\r\nimport Player from \"../Player\";\r\nimport Lico from \"../Lico\";\r\nimport Trevor from \"../Trevor\";\r\nimport PlayerUI from \"../PlayerUI\";\r\n\r\nconst KEY_UP = 38;\r\nconst KEY_RIGHT = 39;\r\nconst KEY_DOWN = 40;\r\nconst KEY_LEFT = 37;\r\n\r\nconst PLAYER_INIT_KEY_STATUS = {\r\n    keyUp: false,\r\n    keyDown: false,\r\n    keyLeft: false,\r\n    keyRight: false,\r\n};\r\nconst PLAYER_INIT_POSITION = { x: 400, y: 400 };\r\nconst MOVE_PLAYER_ACTION_KEY_UP = 38;\r\nconst MOVE_PLAYER_ACTION_KEY_RIGHT = 39;\r\nconst MOVE_PLAYER_ACTION_KEY_DOWN = 40;\r\nconst MOVE_PLAYER_ACTION_KEY_LEFT = 37;\r\n\r\nconst movePlayerReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case MOVE_PLAYER_ACTION_KEY_UP:\r\n            return {\r\n                ...state,\r\n                y: state.y - 10,\r\n            };\r\n        case MOVE_PLAYER_ACTION_KEY_DOWN:\r\n            return {\r\n                ...state,\r\n                y: state.y + 10,\r\n            };\r\n        case MOVE_PLAYER_ACTION_KEY_LEFT:\r\n            return {\r\n                ...state,\r\n                x: state.x - 10,\r\n            };\r\n        case MOVE_PLAYER_ACTION_KEY_RIGHT:\r\n            return {\r\n                ...state,\r\n                x: state.x + 10,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Game = () => {\r\n    const [keyStatus, setKeyStatus] = useState(PLAYER_INIT_KEY_STATUS);\r\n    const [playerPos, movePlayer] = useReducer(\r\n        movePlayerReducer,\r\n        PLAYER_INIT_POSITION\r\n    );\r\n    const [mobs, setMobs] = useState([]);\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [mobSpawnManager, setMobSpawnManager] = useState(\r\n        new MobSpawnManager(\r\n            document.documentElement.clientWidth,\r\n            document.documentElement.clientHeight,\r\n            50\r\n        )\r\n    );\r\n\r\n    useEffect(() => {\r\n        const keyDownController = (e) => {\r\n            switch (e.keyCode) {\r\n                case KEY_UP:\r\n                    if (!keyStatus.keyUp) {\r\n                        setKeyStatus({ ...keyStatus, keyUp: true });\r\n                    }\r\n                    break;\r\n                case KEY_DOWN:\r\n                    if (!keyStatus.keyDown) {\r\n                        setKeyStatus({ ...keyStatus, keyDown: true });\r\n                    }\r\n                    break;\r\n                case KEY_LEFT:\r\n                    if (!keyStatus.keyLeft) {\r\n                        setKeyStatus({ ...keyStatus, keyLeft: true });\r\n                    }\r\n                    break;\r\n                case KEY_RIGHT:\r\n                    if (!keyStatus.keyRight) {\r\n                        setKeyStatus({ ...keyStatus, keyRight: true });\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n\r\n        const keyUpController = (e) => {\r\n            switch (e.keyCode) {\r\n                case KEY_UP:\r\n                    setKeyStatus({ ...keyStatus, keyUp: false });\r\n                    break;\r\n                case KEY_DOWN:\r\n                    setKeyStatus({ ...keyStatus, keyDown: false });\r\n                    break;\r\n                case KEY_LEFT:\r\n                    setKeyStatus({ ...keyStatus, keyLeft: false });\r\n                    break;\r\n                case KEY_RIGHT:\r\n                    setKeyStatus({ ...keyStatus, keyRight: false });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n\r\n        const moveController = () => {\r\n            if (keyStatus.keyUp) {\r\n                movePlayer({ type: MOVE_PLAYER_ACTION_KEY_UP });\r\n            }\r\n            if (keyStatus.keyDown) {\r\n                movePlayer({ type: MOVE_PLAYER_ACTION_KEY_DOWN });\r\n            }\r\n            if (keyStatus.keyLeft) {\r\n                movePlayer({ type: MOVE_PLAYER_ACTION_KEY_LEFT });\r\n            }\r\n            if (keyStatus.keyRight) {\r\n                movePlayer({ type: MOVE_PLAYER_ACTION_KEY_RIGHT });\r\n            }\r\n        };\r\n\r\n        const tmMoveController = setInterval(moveController, 20);\r\n\r\n        document.addEventListener(\"keydown\", keyDownController);\r\n        document.addEventListener(\"keyup\", keyUpController);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", keyDownController);\r\n            document.removeEventListener(\"keyup\", keyUpController);\r\n\r\n            // clearTimeout(tmMobSpawnController);\r\n            clearInterval(tmMoveController);\r\n        };\r\n    }, [keyStatus]);\r\n\r\n    useEffect(() => {\r\n        // FIXME: 중복 실행될 수 있음. playerPos가 최신이 아님.\r\n        const mobSpawnController = (func) => {\r\n            mobSpawnManager.spawnMob();\r\n            mobSpawnManager.moveMobs(playerPos);\r\n            setMobs([...mobSpawnManager.getMobs()]);\r\n\r\n            setTimeout(\r\n                mobSpawnController,\r\n                Math.floor(Math.random() * 1000),\r\n                func\r\n            );\r\n        };\r\n\r\n        setTimeout(\r\n            mobSpawnController,\r\n            Math.floor(Math.random() * 1000),\r\n            mobSpawnController\r\n        );\r\n    }, [mobSpawnManager]);\r\n\r\n    return (\r\n        <div className=\"game-screen\">\r\n            <Player position={playerPos} />\r\n            <PlayerUI hp={100} />\r\n            {mobs.map((mob, idx) => {\r\n                if (mob.type === 0) {\r\n                    return <Lico key={idx} position={{ x: mob.x, y: mob.y }} />;\r\n                } else {\r\n                    return (\r\n                        <Trevor key={idx} position={{ x: mob.x, y: mob.y }} />\r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport Game from \"../Game\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Game />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}